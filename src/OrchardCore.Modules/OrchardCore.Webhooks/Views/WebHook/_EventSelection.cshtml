@using System.Globalization
@using OrchardCore.Mvc.Utilities
@using OrchardCore.WebHooks.Models
@model EditWebHookViewModel

<fieldset id="eventSelection" class="form-group">
    <h6>@T["Which events would you like to trigger this webhook?"]</h6>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="WebHooks.Topics" id="allEventsRadio" value="*" checked>
        <label class="form-check-label" for="allEventsRadio">
            @T["<strong>All</strong> the events"]
        </label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="WebHooks.Topics" id="selectedEventsRadio" value="">
        <label class="form-check-label" for="selectedEventsRadio">
            @T["Only selected events"]
        </label>
    </div>
</fieldset>

@{
    var contentEvents = Model.Events.Where(e => e.Category == "Content" && e.Id.StartsWith("content."));

    var contentTypeEvents = Model.Events.Where(e => e.Category == "Content" && !e.Id.StartsWith("content."));
    var groupedContentTypeEvents = contentTypeEvents.GroupBy(e => e.Name);
}
<div id="selectedEventsContainer" style="display: none" class="form-group">
    <h6>@T["Content Events"]</h6>
    <table class="table table-bordered table-sm border-0">
        <thead class="thead-light text-center">
            <tr>
                <th class="border-0 bg-white"></th>
                @foreach (var eventName in ContentEvents.AllEvents)
                {
                    <th>@CultureInfo.CurrentCulture.TextInfo.ToTitleCase(eventName)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var groupedContentEvent in groupedContentTypeEvents)
            {
            <tr>
                @if (groupedContentEvent.Key != null)
                {
                <td>
                    <label class="">
                        <input type="checkbox" class="row-selectall" data-target=".row-@groupedContentEvent.Key.ToSafeName()">
                        @groupedContentEvent.Key
                    </label>
                </td>
                }
                else
                {
                <td>
                    &nbsp;
                </td>
                }
                @foreach (var contentEvent in groupedContentEvent)
                {
                <td class="text-center column-all"><input name="WebHook.Topics" type="checkbox" class="row-@groupedContentEvent.Key.ToSafeName()" value="@contentEvent.Id"></td>
                }
            </tr>
            }
        <tr class="text-center">
            <td class="border-0"></td>
            @foreach (var contentEvent in contentEvents)
            {
                <td class="table-light"><input name="WebHook.Topics" type="checkbox" class="column-selectall" value="@contentEvent.Id"></td>
            }
        </tr>
        </tbody>
    </table>
</div>

<script at="Foot">
    $(function () {
        $('#eventSelection input[type=radio]').change(function () {
            if ($('#selectedEventsRadio').is(':checked')) {
                $('#selectedEventsContainer').show();
            } else {
                $('#selectedEventsContainer').hide();
            }
        });
        $("#selectedEventsRadio").change();

        // Ensure Checkbox selections on the first column select all checkboxes in the row
        $('#selectedEventsContainer .row-selectall').on('change', function () {
            var isChecked = $(this).prop("checked");
            var selector = $(this).data('target');
            $(selector).prop("checked", isChecked);
        });

        $("#selectedEventsContainer .column-selectall").click(function () {
            var checkedStatus = this.checked;
            var index = $(this).parent().index() + 1;
            $("#selectedEventsContainer tbody tr td.column-all:nth-child(" + index + ") input:checkbox").each(function () {
                this.checked = checkedStatus;
                this.disabled = checkedStatus;
            });
        });
    });

</script>

